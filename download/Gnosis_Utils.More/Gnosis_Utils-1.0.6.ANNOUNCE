Subject: [Announce] Gnosis Utils 1.0.6

This release contains a number of enhancements, especially to the
gnosis.magic subpackage.

   * Added tools for working with metaclass to gnosis.magic
     (see the file 'metaclass.txt' for some discussion).
   * Some improvements to gnosis.xml.validity, in part to play
     nicer with metaclass techniques.
   * Added module gnosis.magic.multimethods (see the file
     'charming_python_b12.txt' for some discussion).
   * Added several articles to gnosis.doc
   * Fixed some old bugs in gnosis.xml.indexer, the utility/
     module should now work with recent versions of Python,
     PyXML, and Gnosis Utilities.
   * The module gnosis.trigramlib is available to help work with
     statistic models of trigram counts, i.e. to filter spam.
     This module is alpha-quality, and is probably not as useful
     as the SpamBayes project.  (see the file 'filtering-spam.txt for
     some discussion).

It may be obtained at:
   http://gnosis.cx/download/Gnosis_Utils-1.0.6.tar.gz

The current release is always available as:
   http://gnosis.cx/download/Gnosis_Utils-current.tar.gz

Try it out, have fun, send feedback!

David Mertz (mertz@gnosis.cx)
Frank McIngvale (frankm@hiwaay.net)

------------------------------------------------------------------------

BACKGROUND:  Gnosis Utilities contains a number of Python libraries, most
(but not all) related to working with XML.  These include:

    gnosis.indexer          (Full-text indexing/searching)
    gnosis.xml.pickle       (XML pickling of Python objects)
    gnosis.xml.objectify    (Any XML to "native" Python objects)
    gnosis.xml.validity     (Enforce validity constraints)
    gnosis.xml.indexer      (XPATH indexing of XML documents)
    [...].convert.txt2html  (Convert ASCII source files to HTML)
    gnosis.util.dtd2sql     (DTD -> SQL 'CREATE TABLE' statements)
    gnosis.util.sql2dtd     (SQL query -> DTD for query results)
    gnosis.util.xml2sql     (XML -> SQL 'INSERT INTO' statements)
    gnosis.util.combinators (Combinatorial higher-order functions)
    gnosis.util.introspect  (Introspect Python objects)
    gnosis.magic            (Multimethods, metaclasses, etc)

...and so much more! :-)

