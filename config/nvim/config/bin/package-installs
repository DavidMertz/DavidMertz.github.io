#!/bin/bash
declare -A REMOVED
APT_HIST=$(mktemp)
SEARCH='apt [install|remove]'

# This function processes the apt package installation and removal history logs
# to identify installed packages. It reads the apt history logs, extracts the
# installed and removed packages, and outputs the installed packages.
# Side effect: Prints each installed packages, one per line
clean () {
    for f in /var/log/apt/history.log.*.gz; do
        zcat $f | grep "$SEARCH" | cut -d' ' -f3- >> $APT_HIST
    done
    grep "$SEARCH" /var/log/apt/history.log | cut -d' ' -f3- >> $APT_HIST

    while read -r line; do
        cmd=($line)
        verb=${cmd[0]}
        # Do we actually have a next command
        if [[ -n "${cmd[1]}" ]]; then
            # There might be less interesting '-y' switch
            if [[ -n "${cmd[2]}" ]] && [ "${cmd[1]}" = "-y" ]; then
                package=${cmd[2]}
            else
                package=${cmd[1]}
            fi
        else
            continue
        fi

        if [ "$verb" = "remove" ]; then
            REMOVED[$package]=1
        else
            if [[ -n "${REMOVED[$package]}" ]]; then
                unset REMOVED[$package]
            elif [ "$package" != "" ]; then
                echo "$package"
            fi
        fi
    done < <(tac $APT_HIST)
}
echo "====================== Apt Installed Packages =========================="
clean | tac
rm $APT_HIST

echo "====================== Flatpak Installed Packages ======================"
flatpak list | cut -d$'\t' -f1,3 |  column -s $'\t' -t

echo "====================== Snap Installed Packages ========================="
snap list | cut -c1-32 | grep -v '^Name'

echo "====================== Cargo Installed Packages ========================"
cargo install --list | grep -v '^ '

echo "====================== Podman Installed Images ========================="
podman images | cut -c1-36 | grep -v '^REPOSITORY'

echo "====================== AppImages and Git Repos ========================="
echo "Neovim                https://github.com/neovim/neovim/releases "
