#!/usr/bin/env -S uvx python@3.13
"""Produce a letter or word histogram of text-like files.

Use -w or --word to create word histograms, otherwise individual letters.

Formats that should work fine as plain filenames include plain text, HTML, Markdown,
AsciiDoc, and XML.

Using a slight bit of shell magic, non-text files can be converted to text within the
command line.  For example:

    $ histogram -w <(docx2txt foo.docx) <(lynx -dump bar.html) <(pdftotext -layout baz.pdf -)
"""
from collections import Counter
from pathlib import Path
import re
import select
from sys import argv, exit, stdin

switches = [arg for arg in argv[1:] if arg.startswith("-")]
files = [arg for arg in argv[1:] if not arg.startswith("-")]

if not files:
    if select.select([stdin, ], [], [], 0.0)[0]:
        data = stdin.read()
    else:
        print(__doc__)
        exit()
else:
    contents = [Path(file).read_text() for file in files]
    data = "".join(contents)


if '-w' in switches or '--word' in switches:
    # Word histogram
    cleaned = re.sub(r'[^\w]', ' ', data)
    hist = Counter(cleaned.lower().split())
else:
    # Letter histogram
    cleaned = re.sub(r'[^\w]', '', data)
    hist = Counter(cleaned)

for item, count in hist.most_common():
    print(f"{count}\t{item}")
