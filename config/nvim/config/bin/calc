#!/usr/bin/env python3
import sys
from math import *  # pyright: ignore
from math import comb as C, perm as P
_P, _C = C, P


def cleanup(expr):
    expr = expr.rstrip('+-')
    expr = expr.replace('**','^')       # Temporarily write exponents as "^"
    expr = expr.replace('x','*').replace('"','').replace("'","")
    expr = expr.replace('*','*1.0*')    # Cast terms to float
    expr = expr.replace('/','*1.0/')    # More floats
    expr = expr.replace('^','**')
    if 'P' not in expr and 'C' not in expr:
        expr = expr.replace(',','')
    return expr

def show(expr):
    result = eval(expr)
    iResult = None if isinstance(result, complex) else int(result)
    if result == iResult:
        print("{:,d}".format(iResult))
    else:
        print("{:,f}".format(result))

if len(sys.argv) > 1:
    args = ["".join(a.split()) for a in sys.argv[1:]]
    show(cleanup("".join(args)))
else:
    show(cleanup(input("Enter numeric expression: ")))

